---
import InteractiveCircle from "./interactive-circle.jsx";
---

<div class="container">
    <div class="circle left-circle"><InteractiveCircle client:load /></div>
    <div class="circle fade"></div>
    <div class="circle right-circle">
        <div class="text-container">
            <h1>10k</h1>
            <p>
                Projects <br />
                Completed
            </p>
        </div>
        <div class="text-container">
            <h1>120</h1>
            <p>
                Worked<br />
                Employee
            </p>
        </div>
        <div class="text-container">
            <h1>15+</h1>
            <p>
                Years Of <br />
                Experience
            </p>
        </div>
    </div>
</div>
<style>
    *::selection {
        color: #000;
        background-color: #cafb42;
    }
    .circle {
        width: 478px;
        height: 478px;
        border-radius: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: 0.3s linear;
        flex-direction: column;
    }
    .circle:nth-child(1) {
        border: 1px solid #cafb42;
    }
    .circle:nth-child(2) {
        margin-left: -60px;
        z-index: 1;
        background-image: url(https://uploads-ssl.webflow.com/63c6818603ef9ce50c6d563d/63c9039809d76d5c4a328885_single-img-02.png);
        background-position: center;
    }
    .circle:nth-child(3) {
        margin-left: -60px;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }
    .circle:not(.circle:nth-child(2)):hover {
        border: 1px solid #cafb42;
        box-shadow: 0px 0px 10px 1px rgba(202, 251, 66, 1);
    }

    .container {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
    }
    h1 {
        color: #cafb42;
        font-size: 64px;
        line-height: 0;
    }
    p {
        color: #fff;
        font-size: 17px;
        line-height: 25px;
        margin-left: 20px;
    }
    .text-container {
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .text-container:nth-child(1) {
        position: relative;
        top: 10px;
    }
    .text-container:nth-child(3) {
        position: relative;
        top: -10px;
    }

    @media (max-width: 1440px) {
        .container {
            display: flex;
            /* grid-template-columns: 1fr; */
        }
    }
    @media (max-width: 1340px) {
        .container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .circle:not(.circle:nth-child(1)) {
            margin-left: 0;
            margin-top: 30px;
        }
        .circle:hover ~ .circle:nth-child(2),
        .circle:hover ~ .circle:nth-child(3) {
            margin-top: -60px;
        }
    }
</style>
<script>
    const leftCircle = new IntersectionObserver((entries) => {
        entries.forEach((element) => {
            if (element.isIntersecting) {
                element.target.style.opacity = "1";
                element.target.style.filter = "blur(0px)";
                element.target.style.transform = "rotate(0deg)";
            } else {
                element.target.style.opacity = "0";
                element.target.style.filter = "blur(5px)";
                element.target.style.transform = "rotate(-180deg)";
            }
        });
    });

    const left = document.querySelectorAll(".left-circle");
    left.forEach((el) => {
        // el.style.opacity = "0";
        el.style.filter = "blur(5px)";
        el.style.transition = "1s linear";
        el.style.transform = "rotate(-180deg)";
        leftCircle.observe(el);
    });


    const rightCircle = new IntersectionObserver((entries) => {
        entries.forEach((element) => {
            if (element.isIntersecting) {
                element.target.style.opacity = "1";
                element.target.style.filter = "blur(0px)";
                element.target.style.transform = "rotate(0deg)";
            } else {
                element.target.style.opacity = "0";
                element.target.style.filter = "blur(5px)";
                element.target.style.transform = "rotate(180deg)";
            }
        });
    });

    const right = document.querySelectorAll(".right-circle");
    right.forEach((el) => {
        // el.style.opacity = "0";
        el.style.filter = "blur(5px)";
        el.style.transition = "1s linear";
        el.style.transform = "rotate(180deg)";
        rightCircle.observe(el);
    });
</script>
