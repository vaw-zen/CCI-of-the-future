name: Daily Facebook Post with Gemini AI

on:
  schedule:
    # Run every day at 10:00 AM Tunisia time (UTC+1 = 9:00 AM UTC)
    - cron: '0 9 * * *'
  workflow_dispatch:
    # Allow manual triggering for testing
    inputs:
      post_type:
        description: 'Type of post to generate'
        required: false
        default: 'tip'
        type: choice
        options:
        - tip
        - motivation
        - service
        - seasonal
      custom_prompt:
        description: 'Custom prompt for Gemini AI (optional)'
        required: false
        type: string

jobs:
  auto-post:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate and Post to Facebook
      env:
        FB_PAGE_ID: ${{ secrets.FB_PAGE_ID }}
        FB_PAGE_ACCESS_TOKEN: ${{ secrets.FB_PAGE_ACCESS_TOKEN }}
        FB_API_VERSION: ${{ secrets.FB_API_VERSION || 'v23.0' }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL || 'https://cciservices.online' }}
      run: |
        # No need to build or start server - call live API directly
        echo "🚀 Calling live API endpoint..."
        
        # Determine post type (from manual input or random for scheduled)
        if [ "${{ github.event.inputs.post_type }}" != "" ]; then
          POST_TYPE="${{ github.event.inputs.post_type }}"
        else
          # For scheduled runs, rotate through different post types
          DAY_OF_YEAR=$(date +%j)
          TYPES=("tip" "motivation" "service" "seasonal")
          INDEX=$((DAY_OF_YEAR % 4))
          POST_TYPE=${TYPES[$INDEX]}
        fi
        
        echo "📝 Generating $POST_TYPE post for today..."
        
        # Prepare API call data
        if [ "${{ github.event.inputs.custom_prompt }}" != "" ]; then
          PAYLOAD=$(jq -n \
            --arg postType "$POST_TYPE" \
            --arg customPrompt "${{ github.event.inputs.custom_prompt }}" \
            '{postType: $postType, customPrompt: $customPrompt, includeHashtags: true, includeImage: true}')
        else
          PAYLOAD=$(jq -n \
            --arg postType "$POST_TYPE" \
            '{postType: $postType, includeHashtags: true, includeImage: true}')
        fi
        
        # Call the live auto-post API endpoint
        RESPONSE=$(curl -s -X POST https://cciservices.online/api/auto-post-daily \
          -H "Content-Type: application/json" \
          -d "$PAYLOAD")
        
        echo "🤖 API Response: $RESPONSE"
        
        # Check if post was successful
        SUCCESS=$(echo "$RESPONSE" | jq -r '.success // false')
        
        if [ "$SUCCESS" = "true" ]; then
          CONTENT=$(echo "$RESPONSE" | jq -r '.generated_content')
          IMAGE_URL=$(echo "$RESPONSE" | jq -r '.selected_image // "none"')
          FB_POST_ID=$(echo "$RESPONSE" | jq -r '.facebook_response.id')
          HAS_IMAGE=$(echo "$RESPONSE" | jq -r '.posted_with_image // false')
          echo "✅ Successfully posted to Facebook!"
          echo "📱 Post ID: $FB_POST_ID"
          echo "🖼️ Image: $IMAGE_URL"
          echo "📝 Content: $CONTENT"
          
          # Save success info to GitHub Actions summary
          echo "## 🎉 Daily Post Success!" >> $GITHUB_STEP_SUMMARY
          echo "**Post Type:** $POST_TYPE" >> $GITHUB_STEP_SUMMARY
          echo "**Facebook Post ID:** $FB_POST_ID" >> $GITHUB_STEP_SUMMARY
          echo "**Posted with Image:** $HAS_IMAGE" >> $GITHUB_STEP_SUMMARY
          if [ "$IMAGE_URL" != "none" ] && [ "$IMAGE_URL" != "null" ]; then
            echo "**Image URL:** $IMAGE_URL" >> $GITHUB_STEP_SUMMARY
          fi
          echo "**Generated Content:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "$CONTENT" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date)" >> $GITHUB_STEP_SUMMARY
        else
          ERROR=$(echo "$RESPONSE" | jq -r '.error // "Unknown error"')
          echo "❌ Failed to post: $ERROR"
          echo "## ❌ Daily Post Failed" >> $GITHUB_STEP_SUMMARY
          echo "**Error:** $ERROR" >> $GITHUB_STEP_SUMMARY
          echo "**Response:** \`$RESPONSE\`" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi