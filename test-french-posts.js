/**
 * Test French Auto-Post with Enhanced CCI Services Content
 */

const API_BASE_URL = 'http://localhost:3000'; // Updated to correct port
const API_ENDPOINT = '/api/auto-post-daily';

async function testFrenchPosts() {
  console.log('üá´üá∑ Testing Auto-Post API with Enhanced French Content for CCI Services\n');

  try {
    // Test 1: Health check
    console.log('1Ô∏è‚É£ V√©rification de l\'√©tat de l\'API...');
    const healthResponse = await fetch(`${API_BASE_URL}${API_ENDPOINT}`, {
      method: 'GET'
    });
    const healthData = await healthResponse.json();
    console.log('‚úÖ √âtat API:', healthData.message);
    console.log('üìã Fonctionnalit√©s:', healthData.features);
    console.log('');

    // Test 2: Service highlight post (Tapisserie)
    console.log('2Ô∏è‚É£ Test: Mise en avant service Tapisserie...');
    const serviceResponse = await fetch(`${API_BASE_URL}${API_ENDPOINT}`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        postType: 'service',
        includeHashtags: true,
        includeImage: true
      })
    });
    
    const serviceData = await serviceResponse.json();
    await displayResult('SERVICE TAPISSERIE', serviceData);

    // Test 3: Cleaning tip (Tapis/Moquettes)
    console.log('3Ô∏è‚É£ Test: Conseil nettoyage tapis...');
    const tipResponse = await fetch(`${API_BASE_URL}${API_ENDPOINT}`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        postType: 'tip',
        includeHashtags: true,
        includeImage: true
      })
    });
    
    const tipData = await tipResponse.json();
    await displayResult('CONSEIL TAPIS', tipData);

    // Test 4: Motivation post
    console.log('4Ô∏è‚É£ Test: Post motivation maison propre...');
    const motivationResponse = await fetch(`${API_BASE_URL}${API_ENDPOINT}`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        postType: 'motivation',
        includeHashtags: true,
        includeImage: true
      })
    });
    
    const motivationData = await motivationResponse.json();
    await displayResult('MOTIVATION', motivationData);

    // Test 5: Custom prompt for marble care
    console.log('5Ô∏è‚É£ Test: Conseil personnalis√© entretien marbre...');
    const marbleResponse = await fetch(`${API_BASE_URL}${API_ENDPOINT}`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        customPrompt: `Cr√©ez un post Facebook sur l'importance de la cristallisation du marbre pour les maisons tunisiennes. 
                       Mentionnez l'expertise de CCI Services en restauration marbre. 
                       Maximum 150 caract√®res, emojis naturels, langue fran√ßaise.
                       Mettez l'accent sur la protection et l'√©l√©gance durable.`,
        includeHashtags: true,
        includeImage: true
      })
    });
    
    const marbleData = await marbleResponse.json();
    await displayResult('MARBRE PERSONNALIS√â', marbleData);

    console.log('\nüìä R√©sum√© des tests:');
    console.log('‚úÖ Tous les posts g√©n√©r√©s en fran√ßais');
    console.log('‚úÖ Contenu sp√©cifique aux services CCI');
    console.log('‚úÖ Images s√©lectionn√©es automatiquement');
    console.log('‚úÖ Hashtags inclus pour visibilit√©');

  } catch (error) {
    console.error('‚ùå Erreur de test:', error.message);
  }
}

async function displayResult(type, data) {
  if (data.success) {
    console.log(`‚úÖ ${type} - SUCC√àS!`);
    console.log(`   üìù Contenu: "${data.generated_content}"`);
    console.log(`   üìè Longueur: ${data.generated_content?.length || 0} caract√®res`);
    console.log(`   üñºÔ∏è  Image: ${data.selected_image ? '‚úÖ Incluse' : '‚ùå Non incluse'}`);
    console.log(`   üì± Facebook ID: ${data.facebook_response?.id || 'Post√©'}`);
    console.log(`   üéØ Avec image: ${data.posted_with_image ? 'Oui' : 'Non'}`);
    
    // Analyze content quality
    const content = data.generated_content || '';
    const hasEmojis = /[\u{1F600}-\u{1F64F}]|[\u{1F300}-\u{1F5FF}]|[\u{1F680}-\u{1F6FF}]|[\u{1F1E0}-\u{1F1FF}]|[\u{2600}-\u{26FF}]|[\u{2700}-\u{27BF}]/u.test(content);
    const mentionsCCI = content.toLowerCase().includes('cci');
    const inFrench = /[√†√°√¢√§√®√©√™√´√¨√≠√Æ√Ø√≤√≥√¥√∂√π√∫√ª√º]/.test(content) || content.includes('√©') || content.includes('√®');
    
    console.log(`   üìã Analyse: Emojis ${hasEmojis ? '‚úÖ' : '‚ùå'} | CCI ${mentionsCCI ? '‚úÖ' : '‚ùå'} | Fran√ßais ${inFrench ? '‚úÖ' : '‚ùå'}`);
  } else {
    console.log(`‚ùå ${type} - √âCHEC`);
    console.log(`   Erreur: ${data.error}`);
    console.log(`   D√©tails: ${JSON.stringify(data).substring(0, 200)}...`);
  }
  console.log('');
  
  // Wait between requests to avoid rate limits
  await new Promise(resolve => setTimeout(resolve, 1000));
}

// Test different specific services
async function testSpecificServices() {
  console.log('üéØ Test des services sp√©cifiques CCI\n');
  
  const specificTests = [
    {
      name: 'NETTOYAGE SALON',
      prompt: 'Cr√©ez un post sur le nettoyage professionnel de salons par CCI Services: enl√®vement taches, d√©poussi√©rage, produits non-toxiques. Fran√ßais, 150 caract√®res max, emojis.'
    },
    {
      name: 'FIN DE CHANTIER',
      prompt: 'Post sur le nettoyage fin de chantier CCI Services: sols, murs, vitres, sanitaires apr√®s travaux. Espace propre et sain rapidement. Fran√ßais, 150 caract√®res, emojis.'
    },
    {
      name: 'RESTAURATION MARBRE',
      prompt: 'Post sur la restauration marbre CCI Services: lustrage, cristallisation, protection. R√©sultat impeccable garanti. Fran√ßais, 150 caract√®res, emojis.'
    }
  ];
  
  for (const test of specificTests) {
    console.log(`üîß Test: ${test.name}...`);
    
    try {
      const response = await fetch(`${API_BASE_URL}${API_ENDPOINT}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          customPrompt: test.prompt,
          includeHashtags: true,
          includeImage: true
        })
      });
      
      const data = await response.json();
      await displayResult(test.name, data);
    } catch (error) {
      console.log(`‚ùå ${test.name}: Erreur - ${error.message}\n`);
    }
  }
}

// Export for module use
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { testFrenchPosts, testSpecificServices };
}

// Run tests
if (require.main === module) {
  console.log('üöÄ D√©marrage des tests fran√ßais pour CCI Services...\n');
  testFrenchPosts();
}